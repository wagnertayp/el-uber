{% extends "layout.html" %}

{% block content %}
<div class="max-w-[1800px] mx-auto px-2">
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-prosegur-black mb-4 font-heading">Carteira Nacional de Vigilantes - CNV</h1>
        <p class="text-prosegur-gray mb-2 font-body">Processo de Registro conforme Lei nº 13.460/17</p>
        <div class="h-1 w-32 bg-prosegur-yellow"></div>
    </div>

    <div class="bg-prosegur-yellow border-l-4 border-prosegur-black p-4 mb-4 rounded-lg">
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="fa fa-brain text-prosegur-black text-xl"></i>
            </div>
            <div class="ml-4">
                <h2 class="text-lg font-semibold text-prosegur-black mb-2 font-heading">Avaliação Psicotécnica CNV</h2>
                <p class="text-prosegur-black font-body">
                    Esta é a segunda etapa do processo de avaliação. Por favor, responda todas as questões com sinceridade.
                    Suas respostas serão analisadas por profissionais especializados em avaliação psicológica.
                </p>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg p-4">
        <form id="cac-questionario" class="flex flex-col min-h-[400px]">
            <div id="question-container" class="flex-grow opacity-100 transition-opacity duration-300">
                <!-- Questions will be dynamically inserted here -->
            </div>

            <div class="flex items-center justify-between pt-1 mt-1 border-t border-gray-200">
                <button id="prev-button" class="bg-prosegur-yellow hover:bg-yellow-400 text-prosegur-black font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-prosegur-yellow transition-colors duration-200 font-body" type="button" style="display: none;">
                    <i class="fa fa-arrow-left mr-2"></i>Voltar
                </button>
                <div class="flex-grow"></div>
                <button id="next-button" class="bg-prosegur-yellow hover:bg-yellow-400 text-prosegur-black font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-prosegur-yellow transition-colors duration-200 font-body" type="button" disabled>
                    <i class="fa fa-arrow-right mr-2"></i>Continuar
                </button>
            </div>
        </form>
    </div>
</div>

<style>
    .checkbox-custom {
        width: 20px;
        height: 20px;
        border: 2px solid var(--prosegur-yellow);
        border-radius: 50%;
        margin-right: 12px;
        position: relative;
        flex-shrink: 0;
    }

    .radio-button:checked + label .checkbox-custom::after {
        content: '';
        position: absolute;
        width: 12px;
        height: 12px;
        background-color: var(--prosegur-yellow);
        border-radius: 50%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .radio-button:checked + label {
        background-color: #fef9c3;
        border: 2px solid var(--prosegur-yellow);
    }

    .question-wrapper {
        display: flex;
        flex-direction: column;
        width: 100%;
    }

    .question-wrapper h2 {
        flex-shrink: 0;
        padding: 0;
        margin-bottom: 0.25rem;
    }

    .question-wrapper > div {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        padding: 0;
        gap: 0.125rem;
    }

    .option-button {
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        transition: all 0.2s;
        min-height: 3.5rem; /* Fixed height for all options */
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
    }

    .option-button:hover {
        border-color: #9ca3af;
        background-color: #f9fafb;
    }

    .radio-button:checked + .option-button {
        border: 2px solid var(--prosegur-yellow);
        background-color: #fef9c3;
    }

    :root {
        --prosegur-yellow: #FFD000;
    }
</style>

<script>
    const questions = [
        {
            question: "Como você reage quando se sente frustrado ou irritado?",
            options: [
                "Tento me acalmar respirando fundo e contando até dez",
                "Expresso minha raiva verbalmente, mas nunca fisicamente",
                "Às vezes tenho dificuldade em controlar minha raiva",
                "Geralmente me isolo para evitar conflitos"
            ]
        },
        {
            question: "Em situações de pressão ou estresse, qual é sua reação mais comum?",
            options: [
                "Mantenho a calma e analiso a situação antes de agir",
                "Procuro ajuda ou conselho de outras pessoas",
                "Fico ansioso mas tento manter o foco",
                "Tenho dificuldade em me concentrar"
            ]
        },
        {
            question: "Como você lida com críticas ou feedback negativo?",
            options: [
                "Aceito de forma construtiva e busco melhorar",
                "Escuto mas às vezes me sinto defensivo",
                "Tenho dificuldade em aceitar críticas",
                "Depende de quem está criticando"
            ]
        },
        {
            question: "Quando alguém discorda fortemente de você, como você reage?",
            options: [
                "Escuto o ponto de vista e busco um entendimento comum",
                "Defendo minha posição mas respeito a opinião contrária",
                "Tendo a me irritar mas mantenho a compostura",
                "Prefiro evitar confrontos e cedo facilmente"
            ]
        },
        {
            question: "Como você se comporta em situações de emergência?",
            options: [
                "Mantenho a calma e sigo procedimentos estabelecidos",
                "Fico tenso mas consigo agir de forma efetiva",
                "Tendo a ficar muito ansioso e nervoso",
                "Prefiro que outros tomem a liderança"
            ]
        },
        {
            question: "Qual sua atitude em relação a regras e regulamentos?",
            options: [
                "Sigo rigorosamente, pois entendo sua importância",
                "Geralmente sigo, mas questiono quando necessário",
                "Sigo apenas as que considero importantes",
                "Tenho dificuldade em seguir regras rígidas"
            ]
        },
        {
            question: "Como você lida com responsabilidades importantes?",
            options: [
                "Encaro com seriedade e dedicação total",
                "Compartilho responsabilidades quando possível",
                "Sinto-me pressionado mas cumpro obrigações",
                "Prefiro evitar grandes responsabilidades"
            ]
        },
        {
            question: "Em relação ao planejamento e organização, você:",
            options: [
                "Sempre planejo com antecedência e sou muito organizado",
                "Mantenho um equilíbrio entre planejamento e flexibilidade",
                "Prefiro lidar com as situações conforme surgem",
                "Tenho dificuldade em manter organização"
            ]
        },
        {
            question: "Como você reage a mudanças inesperadas?",
            options: [
                "Adapto-me facilmente e vejo como oportunidade",
                "Aceito mas preciso de tempo para ajustar",
                "Sinto-me desconfortável com mudanças",
                "Resisto fortemente a mudanças"
            ]
        },
        {
            question: "Em situações de conflito, qual sua postura mais comum?",
            options: [
                "Busco mediar e encontrar soluções pacíficas",
                "Defendo meu ponto de vista mas busco acordo",
                "Evito conflitos sempre que possível",
                "Tendo a me envolver emocionalmente"
            ]
        }
    ];

    let currentQuestion = 0;
    const questionContainer = document.getElementById('question-container');
    const prevButton = document.getElementById('prev-button');
    const nextButton = document.getElementById('next-button');

    async function displayQuestion(index) {
        questionContainer.classList.remove('opacity-100');
        questionContainer.classList.add('opacity-0');

        await new Promise(resolve => setTimeout(resolve, 300));

        const question = questions[index];
        let html = `
            <div class="question-wrapper">
                <h2 class="text-lg font-semibold text-prosegur-black font-heading">${index + 1}. ${question.question}</h2>
                <div>
        `;
        question.options.forEach((option, i) => {
            html += `
                <div class="flex items-center p-1">
                    <input type="radio" id="q${index}_option${i}" name="q${index}" value="${option}" class="radio-button hidden">
                    <label for="q${index}_option${i}" class="option-button flex items-center w-full cursor-pointer text-base p-2">
                        <div class="checkbox-custom"></div>
                        <span class="flex-grow">${option}</span>
                    </label>
                </div>
            `;
        });
        html += '</div></div>';
        questionContainer.innerHTML = html;

        // Desabilita o botão inicialmente
        nextButton.disabled = true;
        nextButton.style.opacity = '0.5';

        // Adiciona listeners para habilitar o botão quando uma opção for selecionada
        const radioButtons = questionContainer.querySelectorAll('input[type="radio"]');
        radioButtons.forEach(radio => {
            radio.addEventListener('change', () => {
                nextButton.disabled = false;
                nextButton.style.opacity = '1';
            });
        });

        await new Promise(resolve => setTimeout(resolve, 100));
        questionContainer.classList.remove('opacity-0');
        questionContainer.classList.add('opacity-100');
    }

    function updateButtons() {
        prevButton.style.display = currentQuestion > 0 ? 'block' : 'none';
        nextButton.innerHTML = currentQuestion === questions.length - 1 ?
            '<i class="fa fa-check mr-2"></i>Finalizar' :
            '<i class="fa fa-arrow-right mr-2"></i>Continuar';
    }

    prevButton.addEventListener('click', () => {
        if (currentQuestion > 0) {
            currentQuestion--;
            displayQuestion(currentQuestion);
            updateButtons();
        }
    });

    nextButton.addEventListener('click', () => {
        const selectedOption = document.querySelector(input[name="q${currentQuestion}"]:checked);
        if (selectedOption) {
            if (currentQuestion < questions.length - 1) {
                currentQuestion++;
                displayQuestion(currentQuestion);
                updateButtons();
            } else {
                const formData = new FormData();
                questions.forEach((_, index) => {
                    const selected = document.querySelector(input[name="q${index}"]:checked);
                    if (selected) {
                        formData.append(question_${index}, selected.value);
                    }
                });

                fetch('/submit_psicotecnico', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = data.redirect || '/';
                        } else {
                            alert('Erro ao enviar avaliação: ' + (data.error || 'Erro desconhecido'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Erro ao enviar avaliação. Tente novamente.');
                    });
            }
        } else {
            alert('Por favor, selecione uma opção antes de prosseguir.');
        }
    });

    // Start with first question
    displayQuestion(currentQuestion);
    updateButtons();
</script>
{% endblock %}